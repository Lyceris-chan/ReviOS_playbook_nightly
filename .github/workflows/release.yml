name: Archive and Release

on:
  workflow_dispatch:

env:
    SXSC_REPO: 'https://github.com/Atlas-OS/sxsc'
    FILENAME: 'Revi-PB-ReviOS_Nightly.apbx'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update version
        run: |
          $version = "ReviOS_Nightly"
          $playbookConfPath = "src\playbook.conf"
          $finalizeCMDPath = "src\Executables\FINALIZE.cmd"

          (Get-Content -Path $playbookConfPath) -replace '<Version>.*</Version>', "<Version>$version</Version>" | Set-Content -Path $playbookConfPath

          (Get-Content -Path $finalizeCMDPath) -replace 'set version=.+', "set version=$version" | Set-Content -Path $finalizeCMDPath
        shell: pwsh

      - name: Git clone sxsc
        run: |
          git clone --depth=1 ${{ env.SXSC_REPO }} sxsc-src

      - name: Build cab
        run: |
          pip install -r requirements.txt | Out-Null
          $systemPackages = "..\src\Executables\CAB\systemPackages.yaml" 
          Copy-Item -Path $systemPackages -Destination "cfg.yaml" -Force | Out-Null
          python sxsc.py
          if ($LASTEXITCODE -ne 0) { exit 1 }
          .\build.bat
          Copy-Item -Path *.cab -Destination "..\src\Executables\CAB" -Force | Out-Null
          .\clean.bat
        working-directory: sxsc-src

  archive:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Archive content
        run: |
          7z a -pmalte -mhe=on ${{ env.FILENAME }} ./src/*

      - name: Generate SHA256
        run: |
          $hash = (Get-FileHash -Algorithm SHA256 -Path ${{ env.FILENAME }}).Hash
          echo ("HASH=" + $hash) >> $env:GITHUB_ENV

  release:
    needs: archive
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
  
      - name: Run script and set outputs
        run: |
          python get_versions.py
          echo "CANARY=$(python get_versions.py | awk 'NR==1{print $1}')" >> $env:GITHUB_ENV
          echo "DEV=$(python get_versions.py | awk 'NR==2{print $1}')" >> $env:GITHUB_ENV
          echo "BETA=$(python get_versions.py | awk 'NR==3{print $1}')" >> $env:GITHUB_ENV

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.FILENAME }}
          asset_name: ${{ env.FILENAME }}
          tag: ${{ github.ref }}
          overwrite: true
          body: |
            # ReviOS nightly build with insider support

            ## Supported versions:

            - Canary: ${{ env.CANARY }}
            - Dev: ${{ env.DEV }}
            - Beta: ${{ env.BETA }}

            ## Note:
              
            Again, this is even more unsupported than the official ReviOS releases.

            Use at your own risk and enjoyüëç
            
            SHA256: `${{ env.HASH }}`